use std::{env, fs, path::Path};
use ts_rs::TS; // make sure this is in [build-dependencies]

fn main() {
    // Where the combined types.ts will live
    let shared_path = Path::new("../shared");
    fs::create_dir_all(shared_path).expect("cannot create ../shared");

    println!("Generating TypeScript types…");

    // Tell ts-rs where to drop its per-type files (we’ll still roll our own big one)
    env::set_var("TS_RS_EXPORT_DIR", shared_path.to_str().unwrap());

    // Collect every declaration at *runtime* (so no const-eval issues)
    let decls = [
        vibe_kanban::models::ApiResponse::<()>::decl(),
        vibe_kanban::models::config::Config::decl(),
        vibe_kanban::models::config::ThemeMode::decl(),
        vibe_kanban::models::config::EditorConfig::decl(),
        vibe_kanban::models::config::EditorType::decl(),
        vibe_kanban::executor::ExecutorConfig::decl(),
        vibe_kanban::models::project::CreateProject::decl(),
        vibe_kanban::models::project::Project::decl(),
        vibe_kanban::models::project::UpdateProject::decl(),
        vibe_kanban::models::project::SearchResult::decl(),
        vibe_kanban::models::project::SearchMatchType::decl(),
        vibe_kanban::models::task::CreateTask::decl(),
        vibe_kanban::models::task::TaskStatus::decl(),
        vibe_kanban::models::task::Task::decl(),
        vibe_kanban::models::task::TaskWithAttemptStatus::decl(),
        vibe_kanban::models::task::UpdateTask::decl(),
        vibe_kanban::models::task_attempt::TaskAttemptStatus::decl(),
        vibe_kanban::models::task_attempt::TaskAttempt::decl(),
        vibe_kanban::models::task_attempt::CreateTaskAttempt::decl(),
        vibe_kanban::models::task_attempt::UpdateTaskAttempt::decl(),
        vibe_kanban::models::task_attempt_activity::TaskAttemptActivity::decl(),
        vibe_kanban::models::task_attempt_activity::CreateTaskAttemptActivity::decl(),
        vibe_kanban::routes::filesystem::DirectoryEntry::decl(),
        vibe_kanban::models::task_attempt::DiffChunkType::decl(),
        vibe_kanban::models::task_attempt::DiffChunk::decl(),
        vibe_kanban::models::task_attempt::FileDiff::decl(),
        vibe_kanban::models::task_attempt::WorktreeDiff::decl(),
        vibe_kanban::models::task_attempt::BranchStatus::decl(),
    ];

    // Header banner
    const HEADER: &str =
        "// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs).\n\
         // Do not edit this file manually.\n\
         // Auto-generated from Rust backend types using ts-rs\n\n";

    // Smash it all together
    let consolidated = format!("{HEADER}{}", decls.join("\n\n"));

    fs::write(shared_path.join("types.ts"), consolidated).expect("unable to write types.ts");

    println!("✅ TypeScript types generated in ../shared/");
}
