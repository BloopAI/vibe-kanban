name: Build All Platforms

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            platform: linux-arm64
            use-cross: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows-x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            platform: windows-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos-arm64

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install cross-compilation tools
        if: matrix.use-cross
        run: cargo install cross
      
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build
      
      - name: Build Rust binaries
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
        shell: bash
      
      - name: Package binaries
        run: |
          mkdir -p npx-cli/dist/${{ matrix.platform }}
          
          # Determine binary extension
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            EXT=".exe"
          else
            EXT=""
          fi
          
          # Package main binary
          cp target/${{ matrix.target }}/release/server${EXT} vibe-kanban${EXT}
          zip vibe-kanban.zip vibe-kanban${EXT}
          mv vibe-kanban.zip npx-cli/dist/${{ matrix.platform }}/
          rm vibe-kanban${EXT}
          
          # Package MCP binary
          cp target/${{ matrix.target }}/release/mcp_task_server${EXT} vibe-kanban-mcp${EXT}
          zip vibe-kanban-mcp.zip vibe-kanban-mcp${EXT}
          mv vibe-kanban-mcp.zip npx-cli/dist/${{ matrix.platform }}/
          rm vibe-kanban-mcp${EXT}
        shell: bash
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.platform }}
          path: npx-cli/dist/${{ matrix.platform }}/

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: npx-cli/dist/
          pattern: binaries-*
          merge-multiple: false
      
      - name: Reorganize artifacts
        run: |
          cd npx-cli/dist
          for dir in binaries-*; do
            platform=${dir#binaries-}
            mv $dir/* $platform/ 2>/dev/null || true
            rmdir $dir
          done
          ls -la *
      
      - name: Publish to NPM
        run: |
          cd npx-cli
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}